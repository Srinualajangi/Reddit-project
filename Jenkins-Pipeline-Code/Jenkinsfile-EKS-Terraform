pipeline {
    agent any

    options {
        ansiColor('xterm')
        timestamps()
    }

    parameters {
        string(name: 'File-Name', defaultValue: 'variables.tfvars', description: 'Specify the file name')
        choice(name: 'Terraform-Action', choices: ['apply', 'destroy'], description: 'Select Terraform action')
    }

    stages {
        stage('Checkout from Git') {
            steps {
                git branch: 'main', url: 'https://github.com/Srinualajangi/Reddit-project.git'
            }
        }

        stage('Initializing Terraform') {
            steps {
                withAWS(credentials: 'aws-key', region: 'us-east-1') {
                    dir('EKS-TF') {
                        sh 'terraform init -reconfigure'
                    }
                }
            }
        }

        stage('Validate Terraform Code') {
            steps {
                withAWS(credentials: 'aws-key', region: 'us-east-1') {
                    dir('EKS-TF') {
                        sh 'terraform validate'
                    }
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                withAWS(credentials: 'aws-key', region: 'us-east-1') {
                    dir('EKS-TF') {
                        sh """
                            terraform refresh -var-file=variables.tfvars
                            terraform state list
                            terraform plan -var-file=${params.'File-Name'}
                        """
                    }
                }
            }
        }

        stage('Terraform Action') {
            steps {
                withAWS(credentials: 'aws-key', region: 'us-east-1') {
                    dir('EKS-TF') {
                        script {
                            if (params.'Terraform-Action' == 'apply') {
                                sh "terraform apply -auto-approve -var-file=${params.'File-Name'}"
                            } else if (params.'Terraform-Action' == 'destroy') {
                                sh "terraform destroy -auto-approve -var-file=${params.'File-Name'}"
                            } else {
                                error "Invalid value for Terraform-Action: ${params.'Terraform-Action'}"
                            }
                        }
                    }
                }
            }
        }
    }
}
